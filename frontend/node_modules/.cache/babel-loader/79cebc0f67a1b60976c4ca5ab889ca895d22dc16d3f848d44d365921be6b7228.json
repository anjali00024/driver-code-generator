{"ast":null,"code":"var _jsxFileName = \"/Users/anjali.kumari/Documents/test-project-catalyst/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport ConnectionForm from './components/ConnectionForm';\nimport QueryInterface from './components/QueryInterface';\nimport { ChakraProvider, Box, Heading } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [connectionConfig, setConnectionConfig] = useState(null);\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 5,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: 4,\n        children: \"Driver Code Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), !connectionConfig ? /*#__PURE__*/_jsxDEV(ConnectionForm, {\n        onConnect: setConnectionConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(QueryInterface, {\n        config: connectionConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bj7pT+QFnSjdMPIdVFT+IdGr5zg=\");\n_c = App;\nexport default App;\nexport {};\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ConnectionForm","QueryInterface","ChakraProvider","Box","Heading","jsxDEV","_jsxDEV","App","_s","connectionConfig","setConnectionConfig","children","p","mb","fileName","_jsxFileName","lineNumber","columnNumber","onConnect","config","_c","$RefreshReg$"],"sources":["/Users/anjali.kumari/Documents/test-project-catalyst/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport ConnectionForm from './components/ConnectionForm';\nimport QueryInterface from './components/QueryInterface';\nimport { ChakraProvider, Box, Heading } from '@chakra-ui/react';\n\ninterface ConnectionConfig {\n  secureConnectBundle: string;\n  keyspace: string;\n  token: string;\n  region: string;\n  connectionMethod: 'driver';\n  driverType: 'python' | 'java';\n  consistencyLevel: string;\n  retryPolicy: string;\n  loadBalancingPolicy: string;\n}\n\nfunction App() {\n  const [connectionConfig, setConnectionConfig] = useState<ConnectionConfig | null>(null);\n\n  return (\n    <ChakraProvider>\n      <Box p={5}>\n        <Heading mb={4}>Driver Code Generator</Heading>\n        {!connectionConfig ? (\n          <ConnectionForm onConnect={setConnectionConfig} />\n        ) : (\n          <QueryInterface config={connectionConfig} />\n        )}\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\nexport {}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,cAAc,EAAEC,GAAG,EAAEC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAchE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAA0B,IAAI,CAAC;EAEvF,oBACEO,OAAA,CAACJ,cAAc;IAAAS,QAAA,eACbL,OAAA,CAACH,GAAG;MAACS,CAAC,EAAE,CAAE;MAAAD,QAAA,gBACRL,OAAA,CAACF,OAAO;QAACS,EAAE,EAAE,CAAE;QAAAF,QAAA,EAAC;MAAqB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EAC9C,CAACR,gBAAgB,gBAChBH,OAAA,CAACN,cAAc;QAACkB,SAAS,EAAER;MAAoB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAElDX,OAAA,CAACL,cAAc;QAACkB,MAAM,EAAEV;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC5C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB;AAACT,EAAA,CAfQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAiBZ,eAAeA,GAAG;AAClB;AAAU,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}